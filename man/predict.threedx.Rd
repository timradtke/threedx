% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{predict.threedx}
\alias{predict.threedx}
\title{Draw forecast sample paths from a fitted 3DX model}
\usage{
\method{predict}{threedx}(
  object,
  horizon,
  n_samples,
  observation_driven,
  innovation_function,
  ...
)
}
\arguments{
\item{object}{A fitted model object of class \code{threedx}}

\item{horizon}{An integer defining the forecast horizon}

\item{n_samples}{An integer defining the number of sample paths to draw}

\item{observation_driven}{Logical; if \code{TRUE}, sample paths are generated by
drawing from weighted historical observations directly instead of adding
innovation noise on the current mean forecast. This is similar to the
Non-Parametric Time Series forecaster (NPTS) described in
"GluonTS: Probabilistic Time Series Models in Python" (2019) by Flunkert et
al. (see https://arxiv.org/abs/1906.05264). If \code{FALSE}, sample paths will
be generated by adding innovation noise on top of the current weighted
average forecast.}

\item{innovation_function}{A function with arguments \code{n} and \code{errors}. Must
be able to handle additional parameters via \code{...} to allow for potential
future changes in the set of arguments passed to
\code{innovation_function} by \code{\link[=predict.threedx]{predict.threedx()}}. For examples, see
\code{\link[=draw_normal_with_drift]{draw_normal_with_drift()}} or \code{\link[=draw_bootstrap_weighted]{draw_bootstrap_weighted()}}.
The provided \code{innovation_function} must return a numeric vector of length
\code{n} that contains i.i.d samples that can be used for any sample path and
forecast horizon.
This argument is ignored when \code{observation_driven=TRUE}.}

\item{...}{Additional arguments passed to \code{innovation_function}}
}
\description{
Draw forecast sample paths from a fitted 3DX model
}
