% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{draw_bootstrap_weighted}
\alias{draw_bootstrap_weighted}
\title{Draw innovations by bootstrapping from weighted residual errors}
\usage{
draw_bootstrap_weighted(n, errors, weight_function, ...)
}
\arguments{
\item{n}{The number of innovations to draw}

\item{errors}{The residual errors that are used to define the distribution
from which the innovations are drawn}

\item{weight_function}{A function that takes \code{errors} as sole argument and
must return a numeric vector of same length as \code{errors} to be used as
\code{prob} argument by the underlying \code{sample()} call}

\item{...}{Additional arguments passed from \code{\link[=predict.threedx]{predict.threedx()}}, ignored}
}
\value{
A vector of same type as \code{errors} and of length \code{n}
}
\description{
Draw innovations by bootstrapping from weighted residual errors
}
\examples{
model <- learn_weights(
  y = rpois(n = 55, lambda = pmax(0.1, 1 + 10 * sinpi(1:55 / 6))),
  season_length = 12L,
  alphas_grid = list_sampled_alphas(n_target = 25),
  loss_function = loss_mae
)

forecast <- predict(
  object = model,
  horizon = 12L,
  n_samples = 1000L,
  observation_driven = FALSE,
  innovation_function = draw_bootstrap_weighted,
  weight_function = function(x) {
    weights_exponential(alpha = model$alpha, n = length(x))
  }
)
}
