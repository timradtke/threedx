% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learn_weights.R
\name{learn_weights}
\alias{learn_weights}
\title{Fit a 3DX model to a time series}
\usage{
learn_weights(y, season_length, alphas_grid, loss_function)
}
\arguments{
\item{y}{The time series to be forecasted}

\item{season_length}{The presumed length of a seasonal period for \code{y}}

\item{alphas_grid}{A list of possible parameter combinations to generate the
weights of the final model. The optimal parameter set will be chosen based
on the minimization of \code{loss_function}. Each entry of \code{alphas_grid} must
be a numeric vector of length three.
This list can be generated via \code{\link[=list_sampled_alphas]{list_sampled_alphas()}} or
\code{\link[=list_edge_alphas]{list_edge_alphas()}}, for example.}

\item{loss_function}{A function with first argument \code{y_hat} and optionally
more arguments. Usually, to compute a loss, at least \code{y} is required to
compute errors. Must be able to handle additional parameters via \code{...} to
allow for potential future changes in the set of arguments passed to
\code{loss_function} by \code{\link[=learn_weights]{learn_weights()}}. For examples, see \code{\link[=loss_mae]{loss_mae()}} or
\code{\link[=loss_mae_with_observation_weight]{loss_mae_with_observation_weight()}}.
The arguments \code{y_hat} and \code{y} passed by \code{\link[=learn_weights]{learn_weights()}} are numeric
vectors of equal length.
The provided \code{loss_function} must return a numeric scalar value.}
}
\value{
A fitted model object of class \code{threedx}
}
\description{
Fit a 3DX model to a time series
}
